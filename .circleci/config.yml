version: 2.1

#ORBS:
orbs:
  node: circleci/node@5.0.1
  docker: circleci/docker@2.1.4
  heroku: circleci/heroku@2.0.0
  snyk: snyk/snyk@1.5.0

#JOBS: build, test, scan, publish, deploy
jobs:
  build:
    docker:
      - image: cimg/node:16.10
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: npm
      - run: |
          echo "Installing dependencies..."
          npm install
  test:
    docker:
      - image: cimg/node:16.10
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: npm
      - run: |
          echo "Running tests..."
          npm run test
  scan:
    docker:
      - image: cimg/node:16.10
    environment:
      IMAGE_NAME: #TBC Image Name (Eg: laurenong/education-space)
    steps:
      - checkout
      - setup_remote_docker
      - docker/check
      - run: docker build -t $IMAGE_NAME .
      - snyk/scan:
          docker-image-name: $IMAGE_NAME
  publish:
    executor: docker/docker
    steps:
      - setup_remote_docker
      - checkout
      - docker/check
      - docker/build:
          image: #TBC Image Name (Eg: laurenong/education-space)
      - docker/push:
          image: #TBC Image Name (Eg: laurenong/education-space)

  deploy:
    docker:
      - image: cimg/node:16.10
    steps:
      - setup_remote_docker
      - checkout
      - heroku/install
      - run:
          name: Heroku Container Push
          command: |
              heroku container:login
              heroku container:push web -a ["TBC Heroku container name (Eg:lauren-su-devops)"]
              heroku container:release web -a ["TBC Heroku container name (Eg:lauren-su-devops)"]

#WORKFLOW: ci_flow = dev branch & cicd_flow = release branch
workflows:
  ci_flow:
    jobs:
      - build:
        filters:
          branches:
            only:
              - development
      - test:
        filters:
          branches:
            only:
              - development
          requires:
            - build
      - scan:
        filters:
          branches:
            only:
              - development
          requires:
              - test

  cicd_flow:
    jobs:
    - build:
        filters:
          branches:
            only:
              - release
      - test:
        filters:
          branches:
            only:
              - release
          requires:
            - build
            # + all tests pass
      - scan:
        filters:
          branches:
            only:
              - release
          requires:
              - test
      - publish:
        filters:
          branches:
            only:
              - release
          requires:
            - scan
      - deploy:
        filters:
          branches:
            only:
              - release
          requires:
            - publish

